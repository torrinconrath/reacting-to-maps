{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Torrin\\\\Desktop\\\\project\\\\webpage\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport GoogleMapsPage from './GoogleMapsPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiKey, setApiKey] = useState(''); // For Map API key\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const handleLoadMap = () => {\n    // Assuming some logic to load the map here\n    // For example, you can set the mapLoaded state to true.\n    setMapLoaded(true);\n  };\n  const handleRetypeApiKey = () => {\n    // Reset the mapLoaded state to false to allow re-typing API key\n    setMapLoaded(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [mapLoaded ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter your Google Maps API Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: apiKey,\n            onChange: e => setApiKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), apiKey && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: mapLoaded ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetypeApiKey,\n          children: \"Retype API Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/google-maps\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLoadMap,\n            children: \"Load Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/google-maps\",\n        element: /*#__PURE__*/_jsxDEV(GoogleMapsPage, {\n          apiKey: apiKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oAhgyfEPyjRCx3IvSPLDPSbXOCc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Link","GoogleMapsPage","jsxDEV","_jsxDEV","App","_s","apiKey","setApiKey","mapLoaded","setMapLoaded","handleLoadMap","handleRetypeApiKey","children","className","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Torrin/Desktop/project/webpage/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport GoogleMapsPage from './GoogleMapsPage';\nimport './App.css';\n\nfunction App() {\n  const [apiKey, setApiKey] = useState(''); // For Map API key\n  const [mapLoaded, setMapLoaded] = useState(false);\n\n  const handleLoadMap = () => {\n    // Assuming some logic to load the map here\n    // For example, you can set the mapLoaded state to true.\n    setMapLoaded(true);\n  };\n\n  const handleRetypeApiKey = () => {\n    // Reset the mapLoaded state to false to allow re-typing API key\n    setMapLoaded(false);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* ... Your existing code ... */}\n        \n        {mapLoaded ? null : (\n          <div>\n            <label>\n              Enter your Google Maps API Key:\n              <input\n                type=\"text\"\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n              />\n            </label>\n          </div>\n        )}\n\n        {apiKey && (\n          <div>\n            {mapLoaded ? (\n              <button onClick={handleRetypeApiKey}>\n                Retype API Key\n              </button>\n            ) : (\n              <Link to=\"/google-maps\">\n                <button onClick={handleLoadMap}>\n                  Load Map\n                </button>\n              </Link>\n            )}\n          </div>\n        )}\n\n        {/* ... Your existing code ... */}\n      </div>\n\n      <Routes>\n        <Route path=\"/google-maps\" element={<GoogleMapsPage apiKey={apiKey} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC/E,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACAD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACN,MAAM;IAAAe,QAAA,gBACLT,OAAA;MAAKU,SAAS,EAAC,KAAK;MAAAD,QAAA,GAGjBJ,SAAS,GAAG,IAAI,gBACfL,OAAA;QAAAS,QAAA,eACET,OAAA;UAAAS,QAAA,GAAO,iCAEL,eAAAT,OAAA;YACEW,IAAI,EAAC,MAAM;YACXC,KAAK,EAAET,MAAO;YACdU,QAAQ,EAAGC,CAAC,IAAKV,SAAS,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN,EAEAhB,MAAM,iBACLH,OAAA;QAAAS,QAAA,EACGJ,SAAS,gBACRL,OAAA;UAAQoB,OAAO,EAAEZ,kBAAmB;UAAAC,QAAA,EAAC;QAErC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAETnB,OAAA,CAACH,IAAI;UAACwB,EAAE,EAAC,cAAc;UAAAZ,QAAA,eACrBT,OAAA;YAAQoB,OAAO,EAAEb,aAAc;YAAAE,QAAA,EAAC;UAEhC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGE,CAAC,eAENnB,OAAA,CAACL,MAAM;MAAAc,QAAA,eACLT,OAAA,CAACJ,KAAK;QAAC0B,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEvB,OAAA,CAACF,cAAc;UAACK,MAAM,EAAEA;QAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACjB,EAAA,CAzDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}